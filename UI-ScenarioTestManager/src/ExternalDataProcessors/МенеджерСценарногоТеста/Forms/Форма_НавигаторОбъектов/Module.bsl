&НаКлиенте
Перем ТестовоеПриложение;
&НаКлиенте
Перем СоответствиеДереваТестируемымОбъектам;
&НаКлиенте
Перем КешДобавленныхУзлов;
&НаКлиенте
Перем НеДобавлятьУзлы;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НомерПорта = Параметры.НомерПорта;
	СтрокаПодключения = Параметры.СтрокаПодключения;
	
	Если НЕ ЗначениеЗаполнено(НомерПорта) Тогда
		НомерПорта = 1538;
	КонецЕсли;		
	
	// заполним кнопки редактора
	мСценРедактор_ЗаполнитьКнопкиПоУмолчанию();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ) 
	
	Попытка
		ПодключитьсяКлиентТестирования();
		СформироватьНачальноеДерево();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьсяКлиентТестирования()
	
	ТестовоеПриложение = Неопределено;
	СоответствиеДереваТестируемымОбъектам = новый Соответствие;
	КешДобавленныхУзлов = новый Соответствие;
	
	Выполнить("ТестовоеПриложение = Новый ТестируемоеПриложение(,НомерПорта,);");
	//ТестовоеПриложение = Новый ТестируемоеПриложение(,НомерПорта,);
	ВремяОкончанияОжидания = ТекущаяДата() + 10;
	Подключен = Ложь;
	ОписаниеОшибкиСоединения = "";
	Пока Не ТекущаяДата() >= ВремяОкончанияОжидания Цикл
		Попытка
			ТестовоеПриложение.УстановитьСоединение();
			Подключен = Истина;
			Прервать;
		Исключение
			ОписаниеОшибкиСоединения = ОписаниеОшибки();
		КонецПопытки;
	КонецЦикла;
	Если Не Подключен Тогда
		ТестовоеПриложение = Неопределено;
		ОписаниеОшибки = "Не смогли установить соединение! " + Символы.ПС + ОписаниеОшибкиСоединения;
		Сообщить(ОписаниеОшибки);
		ВызватьИсключение ОписаниеОшибки;
	КонецЕсли;

КонецПроцедуры



#Область НастройкиРедактора

&НаСервереБезКонтекста
Функция мСценРедактор_ПолучитьМассивСтруктурДоступныхСвойств()
	
	// Создание описателя типов для таблицы значений
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповСтрока = Новый ОписаниеТипов(Массив);
	Массив.Очистить();
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧисло = Новый ОписаниеТипов(Массив);
	Массив.Очистить();
	Массив.Добавить(Тип("Булево"));
	ОписаниеТиповБулево = Новый ОписаниеТипов(Массив);
	Массив.Очистить();
	Массив.Добавить(Тип("Дата"));
	ОписаниеТиповДата = Новый ОписаниеТипов(Массив);  	
	Массив.Очистить();
	Массив.Добавить(Тип("Строка"));
	Массив.Добавить(Тип("Число"));
	Массив.Добавить(Тип("Булево"));
	Массив.Добавить(Тип("Дата"));
	ОписаниеТиповСтрокаЧислоБулевоДата = Новый ОписаниеТипов(Массив);
	
	
	ДоступныеСвойстваМассив = новый Массив;
	
	// СВОЙСТВА
	
	// ТекстЗаголовка
	стр_н = новый Структура;
	стр_н.Вставить("Свойство","ТекстЗаголовка");
	стр_н.Вставить("Синоним","ТекстЗаголовка");
	стр_н.Вставить("Значение",Неопределено);
	стр_н.Вставить("ОписаниеТипов",ОписаниеТиповСтрока);
	стр_н.Вставить("ТолькоПросмотр",Ложь);
	стр_н.Вставить("Видимость",Ложь);
	стр_н.Вставить("ЭтоМетод",Ложь);
	стр_н.Вставить("ДоступныеТипыСтрокой","");
	стр_н.Вставить("НеДоступныеТипыСтрокой",ВРег("ТестируемоеОкноКлиентскогоПриложения,ТестируемоеПриложение"));
	ДоступныеСвойстваМассив.Добавить(стр_н);
	// Заголовок
	стр_н = новый Структура;
	стр_н.Вставить("Свойство","Заголовок");
	стр_н.Вставить("Синоним","Заголовок");
	стр_н.Вставить("Значение",Неопределено);
	стр_н.Вставить("ОписаниеТипов",ОписаниеТиповСтрока);
	стр_н.Вставить("ТолькоПросмотр",Ложь);
	стр_н.Вставить("Видимость",Ложь);
	стр_н.Вставить("ЭтоМетод",Ложь);
	стр_н.Вставить("ДоступныеТипыСтрокой",ВРег("ТестируемоеОкноКлиентскогоПриложения"));
	стр_н.Вставить("НеДоступныеТипыСтрокой","");
	ДоступныеСвойстваМассив.Добавить(стр_н);
	// Имя
	стр_н = новый Структура;
	стр_н.Вставить("Свойство","Имя");
	стр_н.Вставить("Синоним","Имя");
	стр_н.Вставить("Значение",Неопределено);
	стр_н.Вставить("ОписаниеТипов",ОписаниеТиповСтрока);
	стр_н.Вставить("ТолькоПросмотр",Ложь);
	стр_н.Вставить("Видимость",Ложь);
	стр_н.Вставить("ЭтоМетод",Ложь);
	стр_н.Вставить("ДоступныеТипыСтрокой","");
	стр_н.Вставить("НеДоступныеТипыСтрокой",ВРег("ТестируемоеОкноКлиентскогоПриложения,ТестируемоеПриложение,ТестируемыйКомандныйИнтерфейсОкна,ТестируемаяГруппаКомандногоИнтерфейса,ТестируемаяКнопкаКомандногоИнтерфейса,ТестируемаяФорма"));
	ДоступныеСвойстваМассив.Добавить(стр_н);
	// ИмяФормы
	стр_н = новый Структура;
	стр_н.Вставить("Свойство","ИмяФормы");
	стр_н.Вставить("Синоним","ИмяФормы");
	стр_н.Вставить("Значение",Неопределено);
	стр_н.Вставить("ОписаниеТипов",ОписаниеТиповСтрока);
	стр_н.Вставить("ТолькоПросмотр",Ложь);
	стр_н.Вставить("Видимость",Ложь);
	стр_н.Вставить("ЭтоМетод",Ложь);
	стр_н.Вставить("ДоступныеТипыСтрокой",ВРег("ТестируемаяФорма"));
	стр_н.Вставить("НеДоступныеТипыСтрокой","");
	ДоступныеСвойстваМассив.Добавить(стр_н);	
	// Вид
	стр_н = новый Структура;
	стр_н.Вставить("Свойство","Вид");
	стр_н.Вставить("Синоним","Вид");
	стр_н.Вставить("Значение",Неопределено);
	стр_н.Вставить("ОписаниеТипов",ОписаниеТиповСтрока);
	стр_н.Вставить("ТолькоПросмотр",Ложь);
	стр_н.Вставить("Видимость",Ложь);	
	стр_н.Вставить("ЭтоМетод",Ложь);
	стр_н.Вставить("ДоступныеТипыСтрокой","");
	стр_н.Вставить("НеДоступныеТипыСтрокой",ВРег("ТестируемоеОкноКлиентскогоПриложения,ТестируемоеПриложение,ТестируемыйКомандныйИнтерфейсОкна,ТестируемаяГруппаКомандногоИнтерфейса,ТестируемаяКнопкаКомандногоИнтерфейса,ТестируемаяФорма,ТестируемаяТаблицаФормы"));
	ДоступныеСвойстваМассив.Добавить(стр_н);  	
	// НачальнаяСтраница
	стр_н = новый Структура;
	стр_н.Вставить("Свойство","НачальнаяСтраница");
	стр_н.Вставить("Синоним","НачальнаяСтраница");
	стр_н.Вставить("Значение",Неопределено);
	стр_н.Вставить("ОписаниеТипов",ОписаниеТиповБулево);
	стр_н.Вставить("ТолькоПросмотр",Ложь);
	стр_н.Вставить("Видимость",Ложь);
	стр_н.Вставить("ЭтоМетод",Ложь);
	стр_н.Вставить("ДоступныеТипыСтрокой",ВРег("ТестируемоеОкноКлиентскогоПриложения"));
	стр_н.Вставить("НеДоступныеТипыСтрокой","");
	ДоступныеСвойстваМассив.Добавить(стр_н);
	// Основное
	стр_н = новый Структура;
	стр_н.Вставить("Свойство","Основное");
	стр_н.Вставить("Синоним","Основное");
	стр_н.Вставить("Значение",Неопределено);
	стр_н.Вставить("ОписаниеТипов",ОписаниеТиповБулево);
	стр_н.Вставить("ТолькоПросмотр",Ложь);
	стр_н.Вставить("Видимость",Ложь);
	стр_н.Вставить("ЭтоМетод",Ложь);
	стр_н.Вставить("ДоступныеТипыСтрокой",ВРег("ТестируемоеОкноКлиентскогоПриложения"));
	стр_н.Вставить("НеДоступныеТипыСтрокой","");
	ДоступныеСвойстваМассив.Добавить(стр_н);
	// НавигационнаяСсылка
	стр_н = новый Структура;
	стр_н.Вставить("Свойство","НавигационнаяСсылка");
	стр_н.Вставить("Синоним","НавигационнаяСсылка");
	стр_н.Вставить("Значение",Неопределено);
	стр_н.Вставить("ОписаниеТипов",ОписаниеТиповБулево);
	стр_н.Вставить("ТолькоПросмотр",Ложь);
	стр_н.Вставить("Видимость",Ложь);
	стр_н.Вставить("ЭтоМетод",Ложь);
	стр_н.Вставить("ДоступныеТипыСтрокой",ВРег("ТестируемаяКнопкаКомандногоИнтерфейса"));
	стр_н.Вставить("НеДоступныеТипыСтрокой","");
	ДоступныеСвойстваМассив.Добавить(стр_н);	
	
	
	// МЕТОДЫ
	
	// ПолучитьТекстПодсказки
	стр_н = новый Структура;
	стр_н.Вставить("Свойство","ПолучитьТекстПодсказки");
	стр_н.Вставить("Синоним","ТекстПодсказки");
	стр_н.Вставить("Значение",Неопределено);
	стр_н.Вставить("ОписаниеТипов",ОписаниеТиповСтрока);
	стр_н.Вставить("ТолькоПросмотр",Ложь);
	стр_н.Вставить("Видимость",Ложь);	
	стр_н.Вставить("ЭтоМетод",Истина);
	стр_н.Вставить("ДоступныеТипыСтрокой","");
	стр_н.Вставить("НеДоступныеТипыСтрокой",ВРег("ТестируемоеПриложение,ТестируемыйКомандныйИнтерфейсОкна,ТестируемаяГруппаКомандногоИнтерфейса,ТестируемаяКнопкаКомандногоИнтерфейса,ТестируемаяФорма,ТестируемаяКнопкаФормы,ТестируемоеОкноКлиентскогоПриложения"));
	ДоступныеСвойстваМассив.Добавить(стр_н);
	// ТекущаяВидимость
	стр_н = новый Структура;
	стр_н.Вставить("Свойство","ТекущаяВидимость");
	стр_н.Вставить("Синоним","ТекущаяВидимость");
	стр_н.Вставить("Значение",Неопределено);
	стр_н.Вставить("ОписаниеТипов",ОписаниеТиповБулево);
	стр_н.Вставить("ТолькоПросмотр",Ложь);
	стр_н.Вставить("Видимость",Ложь);
	стр_н.Вставить("ЭтоМетод",Истина);
	стр_н.Вставить("ДоступныеТипыСтрокой","");
	стр_н.Вставить("НеДоступныеТипыСтрокой",ВРег("ТестируемоеПриложение,ТестируемыйКомандныйИнтерфейсОкна,ТестируемаяГруппаКомандногоИнтерфейса,ТестируемаяКнопкаКомандногоИнтерфейса,ТестируемаяФорма,ТестируемоеОкноКлиентскогоПриложения"));
	ДоступныеСвойстваМассив.Добавить(стр_н);	
	// ТекущаяДоступность
	стр_н = новый Структура;
	стр_н.Вставить("Свойство","ТекущаяДоступность");
	стр_н.Вставить("Синоним","ТекущаяДоступность");
	стр_н.Вставить("Значение",Неопределено);
	стр_н.Вставить("ОписаниеТипов",ОписаниеТиповБулево);
	стр_н.Вставить("ТолькоПросмотр",Ложь);
	стр_н.Вставить("Видимость",Ложь);
	стр_н.Вставить("ЭтоМетод",Истина);
	стр_н.Вставить("ДоступныеТипыСтрокой","");
	стр_н.Вставить("НеДоступныеТипыСтрокой",ВРег("ТестируемоеПриложение,ТестируемыйКомандныйИнтерфейсОкна,ТестируемаяГруппаКомандногоИнтерфейса,ТестируемаяКнопкаКомандногоИнтерфейса,ТестируемаяФорма,ТестируемоеОкноКлиентскогоПриложения"));
	ДоступныеСвойстваМассив.Добавить(стр_н);	
	// ТекущееТолькоПросмотр
	стр_н = новый Структура;
	стр_н.Вставить("Свойство","ТекущееТолькоПросмотр");
	стр_н.Вставить("Синоним","ТекущееТолькоПросмотр");
	стр_н.Вставить("Значение",Неопределено);
	стр_н.Вставить("ОписаниеТипов",ОписаниеТиповБулево);
	стр_н.Вставить("ТолькоПросмотр",Ложь);
	стр_н.Вставить("Видимость",Ложь);	
	стр_н.Вставить("ЭтоМетод",Истина);
	стр_н.Вставить("ДоступныеТипыСтрокой","");
	стр_н.Вставить("НеДоступныеТипыСтрокой",ВРег("ТестируемоеПриложение,ТестируемыйКомандныйИнтерфейсОкна,ТестируемаяГруппаКомандногоИнтерфейса,ТестируемаяКнопкаКомандногоИнтерфейса,ТестируемаяФорма,ТестируемаяКнопкаФормы,ТестируемоеОкноКлиентскогоПриложения"));
	ДоступныеСвойстваМассив.Добавить(стр_н);	
	// ПолучитьПредставлениеДанных
	стр_н = новый Структура;
	стр_н.Вставить("Свойство","ПолучитьПредставлениеДанных");
	стр_н.Вставить("Синоним","ПредставлениеДанных");
	стр_н.Вставить("Значение",Неопределено);
	стр_н.Вставить("ОписаниеТипов",ОписаниеТиповСтрока);
	стр_н.Вставить("ТолькоПросмотр",Ложь);
	стр_н.Вставить("Видимость",Ложь);
	стр_н.Вставить("ЭтоМетод",Истина);
	стр_н.Вставить("ДоступныеТипыСтрокой",ВРег("ТестируемоеПолеФормы"));
	стр_н.Вставить("НеДоступныеТипыСтрокой","");
	ДоступныеСвойстваМассив.Добавить(стр_н);	
	// ТекущаяМодифицированность
	стр_н = новый Структура;
	стр_н.Вставить("Свойство","ТекущаяМодифицированность");
	стр_н.Вставить("Синоним","ТекущаяМодифицированность");
	стр_н.Вставить("Значение",Неопределено);
	стр_н.Вставить("ОписаниеТипов",ОписаниеТиповСтрока);
	стр_н.Вставить("ТолькоПросмотр",Ложь);
	стр_н.Вставить("Видимость",Ложь);
	стр_н.Вставить("ЭтоМетод",Истина);
	стр_н.Вставить("ДоступныеТипыСтрокой",ВРег("ТестируемаяФорма"));
	стр_н.Вставить("НеДоступныеТипыСтрокой","");
	ДоступныеСвойстваМассив.Добавить(стр_н);
	// КоличествоПодчиненныхОбъектов
	стр_н = новый Структура;
	стр_н.Вставить("Свойство","ПолучитьПодчиненныеОбъекты().Количество");
	стр_н.Вставить("Синоним","КоличествоПодчиненныхОбъектов");
	стр_н.Вставить("Значение",Неопределено);
	стр_н.Вставить("ОписаниеТипов",ОписаниеТиповЧисло);
	стр_н.Вставить("ТолькоПросмотр",Ложь);
	стр_н.Вставить("Видимость",Ложь);
	стр_н.Вставить("ЭтоМетод",Истина);
	стр_н.Вставить("ДоступныеТипыСтрокой","");
	стр_н.Вставить("НеДоступныеТипыСтрокой",ВРег("ТестируемоеПриложение,ТестируемаяКнопкаФормы"));
	ДоступныеСвойстваМассив.Добавить(стр_н);	
	
	Возврат ДоступныеСвойстваМассив;
	
КонецФункции

&НаСервере
Процедура мСценРедактор_ЗаполнитьКнопкиПоУмолчанию()
	
	
	// ********************************
	// ДОСТУПНЫЕ СВОЙСТВА
	
	ДоступныеСвойстваМассив = мСценРедактор_ПолучитьМассивСтруктурДоступныхСвойств();
	
	
	// ********************************
	// ПАНЕЛЬ ИНСТРУМЕНТОВ
	
	#Область ЗаполнениеТаблицПанелиИнстументов
	
	
	Для каждого стр из ДоступныеСвойстваМассив Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаСвойства.Добавить(),стр);
	КонецЦикла;
	
	
	
	#КонецОбласти
	
	
КонецПроцедуры

&НаКлиенте
Процедура мСценРедактор_ИзменитьВидимостьДоступностьТаблицыСвойств(ТекущиеДанные)
	
	ТипОбъекта = "";
	ВидОбъекта = "";
	
	Если ТекущиеДанные<>Неопределено Тогда
		ТипОбъекта = ТекущиеДанные.ТипОбъекта;
		ТипОбъекта = Врег(ТипОбъекта);
		ТипОбъекта = СтрЗаменить(ТипОбъекта," ","");
		
		ВидОбъекта = ТекущиеДанные.ВидОбъекта;
		ВидОбъекта = Врег(ВидОбъекта);
		ВидОбъекта = СтрЗаменить(ВидОбъекта," ","");
	КонецЕсли;
	
	Для каждого стр из ТаблицаСвойства Цикл
		Если ЗначениеЗаполнено(стр.ДоступныеТипыСтрокой) Тогда
			Если Найти(стр.ДоступныеТипыСтрокой,ТипОбъекта) Тогда
				стр.Видимость = Истина;
			Иначе
				стр.Видимость = Ложь;
			КонецЕсли;
		Иначе
			стр.Видимость = Истина;
		КонецЕсли;
		// если есть недоступный, то скрываем всегда
		Если ЗначениеЗаполнено(стр.НеДоступныеТипыСтрокой) Тогда
			// ТипОбъекта
			Если Найти(стр.НеДоступныеТипыСтрокой,ТипОбъекта) Тогда
				стр.Видимость = Ложь;
			КонецЕсли;
			
			// ВидОбъекта
			Если ЗначениеЗаполнено(ВидОбъекта) Тогда
				Если Найти(стр.НеДоступныеТипыСтрокой,ВидОбъекта) Тогда
					стр.Видимость = Ложь;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура СформироватьНачальноеДерево()
	
	Информация = "";
	НеДобавлятьУзлы = Истина;
	
	Если ТестовоеПриложение<>Неопределено Тогда
		
		ДеревоНавигаторОбъектов.ПолучитьЭлементы().Очистить();
		Корень = ДеревоНавигаторОбъектов.ПолучитьЭлементы().Добавить();
		Корень.Наименование = "ТестовоеПриложение: "+НомерПорта +" ("+СтрокаПодключения+")";
		Корень.ТипОбъекта = Строка(ТипЗнч(ТестовоеПриложение));
		Корень.ДанныеКартинки = мСцен_ПолучитьДанныеКартинки_НаКлиенте(Корень);
		Корень.ИдентификаторУзелаДерева = Корень.ПолучитьИдентификатор();
		СоответствиеДереваТестируемымОбъектам.Вставить(Корень.ПолучитьИдентификатор(),ТестовоеПриложение);
			
		ДобавитьПодчиненныеОбъектыТестируемогоПриложенияВДерево(Корень,ТестовоеПриложение,Истина,1);
		
	КонецЕсли;
	
	// развернем блоки  на два уровня
	Для каждого стр из ДеревоНавигаторОбъектов.ПолучитьЭлементы() Цикл
		Если НЕ Элементы.ДеревоНавигаторОбъектов.Развернут(стр.ПолучитьИдентификатор()) Тогда
			Элементы.ДеревоНавигаторОбъектов.Развернуть(стр.ПолучитьИдентификатор(),Ложь);
			Для каждого стр2 из стр.ПолучитьЭлементы() Цикл
				Элементы.ДеревоНавигаторОбъектов.Развернуть(стр2.ПолучитьИдентификатор(),Ложь);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	
	НеДобавлятьУзлы = Ложь;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПодчиненныеОбъектыТестируемогоПриложенияВДерево(УзелРодитель,ТекущийОбъект,Рекурсивно=Ложь,Знач Глубина=1,ДобавитьТекущийОбъект=Ложь)
	
	Если ТестовоеПриложение<>Неопределено Тогда
		
		Если ДобавитьТекущийОбъект=Ложь Тогда
			СписокОбъектов = ТекущийОбъект.ПолучитьПодчиненныеОбъекты();
		Иначе
			СписокОбъектов = новый Массив;
			СписокОбъектов.Добавить(ТекущийОбъект);
		КонецЕсли;
		ТекущаяГлубина = Глубина - 1;
		
		Если Глубина<0 Тогда
			Если СписокОбъектов.Количество()>0 Тогда
				Узел = УзелРодитель.ПолучитьЭлементы().Добавить();
				Узел.Наименование = "еще...";
			КонецЕсли;
			Возврат;
		КонецЕсли;
				
		Для каждого стр из СписокОбъектов Цикл
			Узел = УзелРодитель.ПолучитьЭлементы().Добавить();
			
			Наименование = "";
			ИмяОбъекта = "";
			ВидОбъекта = "";
			
			Если ТипЗнч(стр)=Тип("ТестируемоеОкноКлиентскогоПриложения") Тогда
				Наименование = стр.Заголовок;
			ИначеЕсли ТипЗнч(стр)=Тип("ТестируемыйКомандныйИнтерфейсОкна") Тогда 
				Наименование = стр.ТекстЗаголовка;
			ИначеЕсли ТипЗнч(стр)=Тип("ТестируемаяГруппаКомандногоИнтерфейса") Тогда 
				Наименование = стр.ТекстЗаголовка;
			ИначеЕсли ТипЗнч(стр)=Тип("ТестируемаяКнопкаКомандногоИнтерфейса") Тогда 
				Наименование = стр.ТекстЗаголовка;
			ИначеЕсли ТипЗнч(стр)=Тип("ТестируемаяФорма") Тогда 
				Наименование = стр.ТекстЗаголовка;
				ИмяОбъекта = стр.ИмяФормы;
			ИначеЕсли ТипЗнч(стр)=Тип("ТестируемоеПолеФормы") Тогда 
				Наименование = стр.ТекстЗаголовка;
				ИмяОбъекта = стр.Имя;
				ВидОбъекта = стр.Вид;
			ИначеЕсли ТипЗнч(стр)=Тип("ТестируемаяГруппаФормы") Тогда 
				Наименование = стр.ТекстЗаголовка;
				ИмяОбъекта = стр.Имя;
				ВидОбъекта = стр.Вид;
			ИначеЕсли ТипЗнч(стр)=Тип("ТестируемаяКнопкаФормы") Тогда 
				Наименование = стр.ТекстЗаголовка; 	
				ИмяОбъекта = стр.Имя;
				ВидОбъекта = стр.Вид;
			ИначеЕсли ТипЗнч(стр)=Тип("ТестируемаяТаблицаФормы") Тогда 
				Наименование = стр.ТекстЗаголовка;		
				ИмяОбъекта = стр.Имя;
			ИначеЕсли ТипЗнч(стр)=Тип("ТестируемаяДекорацияФормы") Тогда 
				Наименование = стр.ТекстЗаголовка;	
				ИмяОбъекта = стр.Имя;
				ВидОбъекта = стр.Вид;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Наименование) Тогда
				Наименование = ИмяОбъекта;
			КонецЕсли;
			
			Узел.Наименование = Наименование;
			Узел.ТипОбъекта = Строка(ТипЗнч(стр));
			Узел.ИмяОбъекта = ИмяОбъекта;
			Узел.ВидОбъекта = ВидОбъекта;
			Узел.ДанныеКартинки = мСцен_ПолучитьДанныеКартинки_НаКлиенте(Узел);
			Узел.ИдентификаторУзелаДерева = Узел.ПолучитьИдентификатор();
			СоответствиеДереваТестируемымОбъектам.Вставить(Узел.ПолучитьИдентификатор(),стр);
			
			ЗаполнитьЗначенияСвойств(Узел,стр);
			
			Если Рекурсивно=Истина Тогда
				ДобавитьПодчиненныеОбъектыТестируемогоПриложенияВДерево(Узел,стр,Рекурсивно,ТекущаяГлубина);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтследитьИзмененияОкон()
	
	СоответсвиеОкон = новый Соответствие;
	
	Корень = ДеревоНавигаторОбъектов.ПолучитьЭлементы();
	КореньТестируемогоПриложения = Корень[0];
	// окна у нас второй уровень
	Для каждого стр из Корень Цикл
		СписокВыбранныхОкон = стр.ПолучитьЭлементы();
		Для каждого ОкноКлиента из СписокВыбранныхОкон Цикл
			ТестируемыйЭлементКлиента = СоответствиеДереваТестируемымОбъектам.Получить(ОкноКлиента.ПолучитьИдентификатор());
			СоответсвиеОкон.Вставить(ОкноКлиента.ПолучитьИдентификатор(),ТестируемыйЭлементКлиента);
		КонецЦикла;
	КонецЦикла;
	
	// получаем список окон и прогоняем дерево на изменение - добавление/удаление
	Если ТестовоеПриложение<>Неопределено Тогда
		
		СписокТестируемыхОбъектов = ТестовоеПриложение.ПолучитьПодчиненныеОбъекты();
		// Поиск закрытых окон
		Для каждого ОкноКлиента из СоответсвиеОкон Цикл
			ОкноНайдено = Ложь;
			Для каждого ТестируемыйЭлементКлиента из СписокТестируемыхОбъектов Цикл 
				Если ОкноКлиента.Значение=ТестируемыйЭлементКлиента Тогда
					ОкноНайдено = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;					
			// не нашли и удаляем
			Если ОкноНайдено=Ложь Тогда
				//ДеревоНавигаторОбъектов.Удалить(ОкноКлиента.Ключ);
				Узел = ДеревоНавигаторОбъектов.НайтиПоИдентификатору(ОкноКлиента.Ключ);
				Узел.ПолучитьРодителя().ПолучитьЭлементы().Удалить(Узел.ПолучитьРодителя().ПолучитьЭлементы().Индекс(Узел));
			КонецЕсли;
		КонецЦикла;
		
		// Поиск новых окон
		Для каждого ТестируемыйЭлементКлиента из СписокТестируемыхОбъектов Цикл 
			ОкноНайдено = Ложь;
			Для каждого ОкноКлиента из СоответсвиеОкон Цикл
				Если ОкноКлиента.Значение=ТестируемыйЭлементКлиента Тогда
					ОкноНайдено = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;					
			// не нашли и добавляем
			Если ОкноНайдено=Ложь Тогда
				ДобавитьПодчиненныеОбъектыТестируемогоПриложенияВДерево(КореньТестируемогоПриложения,ТестируемыйЭлементКлиента,Истина,1,Истина);	
			КонецЕсли;
		КонецЦикла;		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция мСцен_ПолучитьДанныеКартинки_НаКлиенте(Узел) Экспорт
	
	ТипОбъекта = "";
	
	Попытка
		ТипОбъекта = Узел.ТипОбъекта;
	Исключение
	КонецПопытки;
	
	Если ТипОбъекта=Строка(Тип("ТестируемоеПриложение")) Тогда
		ДанныеКартинки = 1;		
	ИначеЕсли ТипОбъекта=Строка(Тип("ТестируемоеОкноКлиентскогоПриложения")) Тогда
		ДанныеКартинки = 2;
	ИначеЕсли ТипОбъекта=Строка(Тип("ТестируемыйКомандныйИнтерфейсОкна")) Тогда 
		ДанныеКартинки = 4;
	ИначеЕсли ТипОбъекта=Строка(Тип("ТестируемаяГруппаКомандногоИнтерфейса")) Тогда 
		ДанныеКартинки = 8;
	ИначеЕсли ТипОбъекта=Строка(Тип("ТестируемаяКнопкаКомандногоИнтерфейса")) Тогда 
		ДанныеКартинки = 4;
	ИначеЕсли ТипОбъекта=Строка(Тип("ТестируемаяФорма")) Тогда 
		ДанныеКартинки = 3;
	ИначеЕсли ТипОбъекта=Строка(Тип("ТестируемоеПолеФормы")) Тогда 
		ДанныеКартинки = 5;
	ИначеЕсли ТипОбъекта=Строка(Тип("ТестируемаяГруппаФормы")) Тогда 
		ДанныеКартинки = 5;
	ИначеЕсли ТипОбъекта=Строка(Тип("ТестируемаяКнопкаФормы")) Тогда 
		ДанныеКартинки = 5;
	ИначеЕсли ТипОбъекта=Строка(Тип("ТестируемаяТаблицаФормы")) Тогда 
		ДанныеКартинки = 5;
	ИначеЕсли ТипОбъекта=Строка(Тип("ТестируемаяДекорацияФормы")) Тогда
		ДанныеКартинки = 5;
	Иначе 
		ДанныеКартинки = 1;
	КонецЕсли; 	
	
	Возврат ДанныеКартинки;
	
КонецФункции

&НаКлиенте
Процедура ТаблицаНавигаторОбъектовПриАктивизацииСтроки(Элемент)

	ТекущиеДанные = Элементы.ДеревоНавигаторОбъектов.ТекущиеДанные;
	
	мСценРедактор_ИзменитьВидимостьДоступностьТаблицыСвойств(ТекущиеДанные);
	
	Если ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ИдентификаторУзелаДерева = ТекущиеДанные.ИдентификаторУзелаДерева;
	//Узел = ДеревоНавигаторОбъектов.НайтиПоИдентификатору(ИдентификаторУзелаДерева);
	ТекущийОбъект = СоответствиеДереваТестируемымОбъектам.Получить(ИдентификаторУзелаДерева);
	
	Если ТекущийОбъект=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// выполним активизацию
	Попытка
		Если НеАктивизироватьЭлементыПриНавигации=Ложь Тогда
			ТекущийОбъект.Активизировать();
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	Для каждого стр из ТаблицаСвойства Цикл
		
		// получаем только видимые
		Если стр.Видимость = Истина Тогда
			Попытка
				Если стр.ЭтоМетод=Истина Тогда					
					Если стр.Свойство="ПолучитьПредставлениеДанных" Тогда
						стр.Значение = "";
						стр.Значение = ТекущийОбъект.ПолучитьТекстРедактирования();
					Иначе
						Выполнить("стр.Значение = ТекущийОбъект."+стр.Свойство+"();");
					КонецЕсли;
				Иначе
					//Выполнить("стр.Значение = ТекущийОбъект."+стр.Свойство+";");
					стр.Значение = ТекущийОбъект[стр.Свойство];
				КонецЕсли;
			Исключение
				//Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;
		
	КонецЦикла;

	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНавигаторОбъектовПередРазворачиванием(Элемент, Строка, Отказ)
	
	Если НЕ НеДобавлятьУзлы=Ложь Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ТекущиеДанные = ЭтаФорма["ДеревоНавигаторОбъектов"].НайтиПоИдентификатору(Строка);
	
	Если ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторУзелаДерева = ТекущиеДанные.ИдентификаторУзелаДерева;
	Узел = ДеревоНавигаторОбъектов.НайтиПоИдентификатору(ИдентификаторУзелаДерева);
	
	Если Узел=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// удалим еще
	ЭлементыУзла = Узел.ПолучитьЭлементы();
	Если ЭлементыУзла.Количество()=1 Тогда
		Если ЭлементыУзла[0].Наименование = "еще..." Тогда
			ЭлементыУзла.Удалить(0);
			
			ТекущийОбъект = СоответствиеДереваТестируемымОбъектам.Получить(ИдентификаторУзелаДерева);
			
			Если ТекущийОбъект=Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			// добавим дерево
			ДобавитьПодчиненныеОбъектыТестируемогоПриложенияВДерево(Узел,ТекущийОбъект,Истина,0);
			
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПодключение(Команда)
	ПодключитьсяКлиентТестирования();
	СформироватьНачальноеДерево();
КонецПроцедуры

&НаКлиенте
Процедура НайтиТекущийЭлемент(Команда)
	
	ОтследитьИзмененияОкон();
	
	СтароеЗначение = НеАктивизироватьЭлементыПриНавигации;
	НеАктивизироватьЭлементыПриНавигации = Истина;
	
	// 1. Найдем активное окно
	АктивноеОкно = ТестовоеПриложение.ПолучитьАктивноеОкно();
	//Сообщить("Активное окно "+АктивноеОкно.Заголовок);
	// 2. Найдем активный элемент из подчиненных
	СписокПодчиненныхОбъектовАктивногоОкна = АктивноеОкно.ПолучитьПодчиненныеОбъекты();
	
	РодительАктивныйЭлемент = Неопределено;
	АктивныйЭлемент = Неопределено;
	АктивныйЭлемент2 = Неопределено;
	МассивАктивныхЭлементов = новый Массив;
	
	Для каждого стр из СписокПодчиненныхОбъектовАктивногоОкна Цикл
		
		АктивныйЭлементГр = Неопределено;
		АктивныйЭлемент = Неопределено;
		РодительАктивныйЭлемент = Неопределено;

		Если ТипЗнч(стр)=Тип("ТестируемаяГруппаКомандногоИнтерфейса") ИЛИ  ТипЗнч(стр)=Тип("ТестируемаяГруппаФормы")  Тогда
			АктивныйЭлемент = стр.ПолучитьТекущуюСтраницу();
			РодительАктивныйЭлемент = стр;
		ИначеЕсли ТипЗнч(стр)=Тип("ТестируемаяФорма") ИЛИ ТипЗнч(стр)=Тип("ТестируемаяТаблицаФормы") Тогда
			АктивныйЭлемент = стр.ПолучитьТекущийЭлемент();
			РодительАктивныйЭлемент = стр;
		КонецЕсли;
		
		ДобавитьЗаполнениеУзлаЕслиНужно(РодительАктивныйЭлемент);
		
		ПройтисьПоВсемГруппамТестирумогоКлиента(РодительАктивныйЭлемент,АктивныйЭлемент);		
		
		ДобавитьЗаполнениеУзлаЕслиНужно(АктивныйЭлемент);
		
		
		//Если НЕ АктивныйЭлемент=Неопределено Тогда
		//	Сообщить("Текущий элемент " +АктивныйЭлемент.ТекстЗаголовка);
		//КонецЕсли;
		
		АктивныйЭлемент2 = Неопределено;
		
		Если ТипЗнч(АктивныйЭлемент)=Тип("ТестируемаяГруппаКомандногоИнтерфейса") ИЛИ  ТипЗнч(АктивныйЭлемент)=Тип("ТестируемаяГруппаФормы")  Тогда
			АктивныйЭлемент2 = АктивныйЭлемент.ПолучитьТекущуюСтраницу();
		ИначеЕсли ТипЗнч(АктивныйЭлемент)=Тип("ТестируемаяФорма") ИЛИ ТипЗнч(АктивныйЭлемент)=Тип("ТестируемаяТаблицаФормы") Тогда
			АктивныйЭлемент2 = АктивныйЭлемент.ПолучитьТекущийЭлемент();
		КонецЕсли;
		
		ДобавитьЗаполнениеУзлаЕслиНужно(АктивныйЭлемент2);


		//Если НЕ АктивныйЭлемент2=Неопределено Тогда
		//	Сообщить("Текущий элемент " +АктивныйЭлемент2.ТекстЗаголовка);
		//КонецЕсли;
		

	КонецЦикла;
	
	Для каждого стр из СоответствиеДереваТестируемымОбъектам Цикл
		Если стр.Значение=АктивноеОкно Тогда
			Элементы.ДеревоНавигаторОбъектов.ТекущаяСтрока = стр.Ключ;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого стр из СоответствиеДереваТестируемымОбъектам Цикл
		Если стр.Значение=РодительАктивныйЭлемент Тогда
			Элементы.ДеревоНавигаторОбъектов.ТекущаяСтрока = стр.Ключ;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого стр из СоответствиеДереваТестируемымОбъектам Цикл
		Если стр.Значение=АктивныйЭлемент Тогда
			Элементы.ДеревоНавигаторОбъектов.ТекущаяСтрока = стр.Ключ;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	
	Для каждого стр из СоответствиеДереваТестируемымОбъектам Цикл
		Если стр.Значение=АктивныйЭлемент2 Тогда
			Элементы.ДеревоНавигаторОбъектов.ТекущаяСтрока = стр.Ключ;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	// 	ДобавитьПодчиненныеОбъектыТестируемогоПриложенияВДерево(Узел,ТекущийОбъект,Истина,0);
	
	НеАктивизироватьЭлементыПриНавигации = СтароеЗначение;

КонецПроцедуры

&НаКлиенте
Процедура ПройтисьПоВсемГруппамТестирумогоКлиента(Знач РодительАктивныйЭлемент,Знач АктивныйЭлемент)
	
	Перем АктивныйЭлементГр, СписокОбъектовФормы, стр2;
	
	Если ТипЗнч(РодительАктивныйЭлемент)=Тип("ТестируемаяФорма") Тогда
		// найдем на форме группы
		СписокОбъектовФормы = РодительАктивныйЭлемент.ПолучитьПодчиненныеОбъекты();
		Для каждого стр2 из СписокОбъектовФормы Цикл
			Если ТипЗнч(стр2)=Тип("ТестируемаяГруппаФормы")  Тогда
				Попытка
					АктивныйЭлементГр = стр2.ПолучитьТекущуюСтраницу();
					ДобавитьЗаполнениеУзлаЕслиНужно(АктивныйЭлементГр);
					ПройтисьПоВсемГруппамТестирумогоКлиента(АктивныйЭлементГр,АктивныйЭлемент);
				Исключение
					//Сообщить(ОписаниеОшибки());
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипЗнч(РодительАктивныйЭлемент)=Тип("ТестируемаяФорма") Тогда
		// найдем на форме группы
		СписокОбъектовФормы = РодительАктивныйЭлемент.ПолучитьПодчиненныеОбъекты();
		Для каждого стр2 из СписокОбъектовФормы Цикл
			// если нашли элемент, то конец
			Если АктивныйЭлемент=стр2 Тогда
				ДобавитьЗаполнениеУзлаЕслиНужно(стр2);
				Возврат;
			КонецЕсли;
			Если ТипЗнч(стр2)=Тип("ТестируемаяГруппаФормы")  Тогда
				Попытка
					АктивныйЭлементГр = стр2.ПолучитьТекущуюСтраницу();
					ДобавитьЗаполнениеУзлаЕслиНужно(АктивныйЭлементГр);
					ПройтисьПоВсемГруппамТестирумогоКлиента(АктивныйЭлементГр,АктивныйЭлемент);
				Исключение
					//Сообщить(ОписаниеОшибки());
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипЗнч(РодительАктивныйЭлемент)=Тип("ТестируемаяГруппаФормы") Тогда
		// найдем на форме группы
		СписокОбъектовФормы = РодительАктивныйЭлемент.ПолучитьПодчиненныеОбъекты();
		Для каждого стр2 из СписокОбъектовФормы Цикл
			// если нашли элемент, то конец
			Если АктивныйЭлемент=стр2 Тогда
				ДобавитьЗаполнениеУзлаЕслиНужно(стр2);
				Возврат;
			КонецЕсли;
			Если ТипЗнч(стр2)=Тип("ТестируемаяГруппаФормы")  Тогда
				Попытка
					// попробуем найти среди подчиненных
					Если стр2.НайтиОбъект(ТипЗнч(АктивныйЭлемент),АктивныйЭлемент.ТекстЗаголовка,АктивныйЭлемент.Имя)<>Неопределено Тогда
						ДобавитьЗаполнениеУзлаЕслиНужно(стр2);
						ПройтисьПоВсемГруппамТестирумогоКлиента(стр2,АктивныйЭлемент);
						Возврат;
					КонецЕсли;
				Исключение
					//Сообщить(ОписаниеОшибки());
				КонецПопытки;
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗаполнениеУзлаЕслиНужно(Знач АктивныйЭлемент)
	
	Перем Узел, ЭлементыУзла;
	
	НеДобавлятьУзлы = Истина;
	
	Узел = ПолучитьЭлементДерева(АктивныйЭлемент);
	
	Если Узел=Неопределено Тогда
		//Сообщить("Не удалось найти элемент в навигаторе. Скорее всего изменилась структура открытых окон. Обновите дерево элементов.");
		Информация = "Не удалось найти элемент в навигаторе. Скорее всего изменилась структура открытых окон. Обновите дерево элементов.";
		НеДобавлятьУзлы = Ложь;
		Возврат;
	КонецЕсли;
	
	ЭлементыУзла = Узел.ПолучитьЭлементы();
	Если ЭлементыУзла.Количество()=1 Тогда
		Если ЭлементыУзла[0].Наименование = "еще..." Тогда
			ЭлементыУзла.Удалить(0);
			ДобавитьПодчиненныеОбъектыТестируемогоПриложенияВДерево(Узел,АктивныйЭлемент,Истина,1);
		КонецЕсли;
	КонецЕсли;
	
	НеДобавлятьУзлы = Ложь;
	

КонецПроцедуры

&НаКлиенте
Функция ПолучитьЭлементДерева(АктивныйЭлемент)
	
	Узел = Неопределено;
	
	Для каждого стр из СоответствиеДереваТестируемымОбъектам Цикл
		Если стр.Значение=АктивныйЭлемент Тогда
			Узел = ДеревоНавигаторОбъектов.НайтиПоИдентификатору(стр.Ключ);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Узел;
	
КонецФункции

&НаКлиенте
Процедура ОтслеживатьНавигациюПоКлиентуПриИзменении(Элемент)
	Если ОтслеживатьНавигациюПоКлиенту=Истина Тогда
		ПодключитьОбработчикОжидания("мСценСкрипт_ВыполнитьОтслеживаниеНавигации", 0.5, Истина);
	Иначе
		ОтключитьОбработчикОжидания("мСценСкрипт_ВыполнитьОтслеживаниеНавигации"); 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура мСценСкрипт_ВыполнитьОтслеживаниеНавигации()
	Попытка
		НайтиТекущийЭлемент(Неопределено);
		ПодключитьОбработчикОжидания("мСценСкрипт_ВыполнитьОтслеживаниеНавигации", 0.5, Истина);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры