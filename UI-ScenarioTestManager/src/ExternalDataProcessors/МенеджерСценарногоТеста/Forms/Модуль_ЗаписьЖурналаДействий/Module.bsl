&НаКлиенте
Перем Модуль_СервисныеФункции;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Отказ = Истина; // форма не предназначена для открытия
КонецПроцедуры


#Область ЗаписьЖурналаДействий1С

#КонецОбласти

#Область ЗаписьЖурналаДействийAutoamtionUI


&НаКлиенте
Процедура НачатьЗапись_AutomationUI_API(Знач PID=0,Знач АдресИнтернет="http://localhost",Знач НомерПорта=8080) Экспорт
	
	ЗагрузитьБиблиотеки();	
	
	СтруктураОтвета = Неопределено;
	
	ПутьUrl = Модуль_СервисныеФункции.ПолучитьПутьUrl(АдресИнтернет, НомерПорта );

	// 1. Отправляем команду начала записи 
	СтруктураОтвета = Модуль_СервисныеФункции.ЗагрузитьФайлПоИнтернетАдресу("http://localhost:"+Формат(НомерПорта,"ЧГ=;")+"/rest.html?&Operation=record_run&api=Automation UI"+?(PID<>0,"&process_id="+Формат(PID,"ЧГ=;"),""));
	Если НЕ СтруктураОтвета.КодСостояния=200 Тогда
		ВызватьИсключение "Не уадлось начать запись. Не запущена служба или произошла другая ошибка. Код ответа:"+СтруктураОтвета.КодСостояния;
	КонецЕсли;
	
КонецПроцедуры	





&НаКлиенте
Процедура ПаузаЗапись_AutomationUI_API(Знач АдресИнтернет="http://localhost",Знач НомерПорта=8080) Экспорт
	
	ЗагрузитьБиблиотеки();
	
	ПутьUrl = Модуль_СервисныеФункции.ПолучитьПутьUrl(АдресИнтернет, НомерПорта );
	
	СтруктураОтвета = Модуль_СервисныеФункции.ЗагрузитьФайлПоИнтернетАдресу(ПутьUrl+"/rest.html?&Operation=record_pause&api=Automation UI");
	
	Если НЕ СтруктураОтвета.КодСостояния=200 Тогда
		ВызватьИсключение "Не удалось установить паузу. Не запущена служба или произошла другая ошибка. Код ответа:"+СтруктураОтвета.КодСостояния;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Функция ЗавершитьЗапись_AutomationUI_API(Знач АдресИнтернет="http://localhost",Знач НомерПорта=8080) Экспорт
	
	ЗагрузитьБиблиотеки();
	
	ПутьUrl = Модуль_СервисныеФункции.ПолучитьПутьUrl(АдресИнтернет, НомерПорта );
	
	Текст = "";
	
	СтруктураОтвета = Модуль_СервисныеФункции.ЗагрузитьФайлПоИнтернетАдресу(ПутьUrl+"/rest.html?&Operation=record_stop&api=Automation UI");
	
	Если НЕ СтруктураОтвета.КодСостояния=200 Тогда
		ВызватьИсключение "Не удалось завершить запись. Не запущена служба или произошла другая ошибка. Код ответа:"+СтруктураОтвета.КодСостояния;
	КонецЕсли;
	
	Текст = СтруктураОтвета.ТелоСтрокой;
	// вставим переносы
	Текст = СтрЗаменить(Текст, "},", "},"+Символы.ПС);
		
	Возврат Текст;
КонецФункции


&НаКлиенте
Функция СписокПриложенийДляОтладки_AutomationUI_API(Знач АдресИнтернет="http://localhost",Знач НомерПорта=8080) Экспорт
	
	ЗагрузитьБиблиотеки();
	
	ПутьUrl = Модуль_СервисныеФункции.ПолучитьПутьUrl(АдресИнтернет, НомерПорта );
	
	СтруктураОтвета = Неопределено;

	СтруктураОтвета = Модуль_СервисныеФункции.ЗагрузитьФайлПоИнтернетАдресу(ПутьUrl+"/rest.html?&Operation=app_list");

	Если НЕ СтруктураОтвета.КодСостояния=200 Тогда
		ВызватьИсключение "Не удалось получить данные. Не запущена служба или произошла другая ошибка. Код ответа:"+СтруктураОтвета.КодСостояния;
	КонецЕсли;
	
	Текст = СтруктураОтвета.ТелоСтрокой;
	
	Результат = Модуль_СервисныеФункции.ОбработкаJSON(Текст);
		
	Возврат Результат;
КонецФункции
	

#КонецОбласти

#Область ЗаписьЖурналаДействийSelenuim


&НаКлиенте
Процедура НачатьЗапись_Selenium_API(Знач АдресИнтернет="http://localhost",Знач НомерПорта=8080,Знач ИмяСессии="Selenium") Экспорт
	
	ЗагрузитьБиблиотеки();
		
	ПутьUrl = Модуль_СервисныеФункции.ПолучитьПутьUrl(АдресИнтернет, НомерПорта );
	
	СтруктураОтвета = Неопределено;

	// 1. Отправляем команду начала записи 
	СтрокаКоманды = "&Operation=record_run&answer_format=json";
	СтрокаКоманды = СтрокаКоманды + "&session_id="+ИмяСессии;	
	СтрокаКоманды = СтрокаКоманды + "&api=Selenium";
	СтруктураОтвета = Модуль_СервисныеФункции.ЗагрузитьФайлПоИнтернетАдресу("http://localhost:"+Формат(НомерПорта,"ЧГ=;")+"/rest.html?"+СтрокаКоманды);
	Если НЕ СтруктураОтвета.КодСостояния=200 Тогда
		ВызватьИсключение "Не удалось начать запись. Не запущена служба или произошла другая ошибка. Код ответа:"+СтруктураОтвета.КодСостояния;
	КонецЕсли;
	
	// 3. Проверим на ошибку
	Текст = СтруктураОтвета.ТелоСтрокой;
	РезультатОтвета = Модуль_СервисныеФункции.ОбработкаJSON(Текст);
	// Была ошибка, запуска сессии
	Если НРег(РезультатОтвета.error)="true" Тогда
		ВызватьИсключение РезультатОтвета.message;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ПаузаЗапись_Selenium_API(Знач АдресИнтернет="http://localhost",Знач НомерПорта=8080,Знач ИмяСессии="Selenium") Экспорт
	
	Сообщить("Недоступно!");
		
КонецПроцедуры

&НаКлиенте
Функция ЗавершитьЗапись_Selenium_API(Знач АдресИнтернет="http://localhost",Знач НомерПорта=8080,Знач ИмяСессии="Selenium") Экспорт
	
	ЗагрузитьБиблиотеки();
	
	ПутьUrl = Модуль_СервисныеФункции.ПолучитьПутьUrl(АдресИнтернет, НомерПорта );
	
	Текст = "";
	СтрокаКоманды = "&Operation=record_stop";
	СтрокаКоманды = СтрокаКоманды + "&session_id="+ИмяСессии;	
	СтрокаКоманды = СтрокаКоманды + "&api=Selenium";
	
	СтруктураОтвета = Модуль_СервисныеФункции.ЗагрузитьФайлПоИнтернетАдресу(ПутьUrl+"/rest.html?"+СтрокаКоманды);
	
	Если НЕ СтруктураОтвета.КодСостояния=200 Тогда
		ВызватьИсключение "Не удалось завершить запись. Не запущена служба или произошла другая ошибка. Код ответа:"+СтруктураОтвета.КодСостояния;
	КонецЕсли;
	
	Текст = СтруктураОтвета.ТелоСтрокой;
	// вставим переносы
	Текст = СтрЗаменить(Текст, "},", "},"+Символы.ПС);
		
	
	Возврат Текст;
КонецФункции

&НаКлиенте
Функция ЗапуститьБраузер_Selenium_API(Знач Браузер,Знач АдресИнтернет="http://localhost",Знач НомерПорта=8080,Знач ИмяСессии="Selenium",Знач ПутьИсполняемыйФайлБраузера="") Экспорт

	ТекстОшибки = "";
	ЗагрузитьБиблиотеки();	
	
	ПутьUrl = Модуль_СервисныеФункции.ПолучитьПутьUrl(АдресИнтернет, НомерПорта );
	СтруктураОтвета = Неопределено;
	
	// I) запускаем сессию
	СтрокаКоманды = "&Operation=new_predefined_session&answer_format=json";
	СтрокаКоманды = СтрокаКоманды + "&session_id="+ИмяСессии;
	СтрокаКоманды = СтрокаКоманды + "&api=Selenium";
	СтрокаКоманды = СтрокаКоманды + "&browser="+Браузер;
	
	// 1. Определеим запущен ли веб сервер
	СтруктураОтвета = Модуль_СервисныеФункции.ЗагрузитьФайлПоИнтернетАдресу(ПутьUrl+"/rest.html?"+СтрокаКоманды);
	// 2. Если не запущен попробуем запустить, и проверим еще раз
	Если НЕ СтруктураОтвета.КодСостояния=200 Тогда
		//ВызватьИсключение "Не запущена служба или произошла другая ошибка. Код ответа:"+СтруктураОтвета.КодСостояния;
		ТекстОшибки = "Не запущена служба или произошла другая ошибка. Код ответа:"+СтруктураОтвета.КодСостояния;
		Возврат ТекстОшибки;
	КонецЕсли;
	// 3. Проверим на ошибку
	Текст = СтруктураОтвета.ТелоСтрокой;
	РезультатОтвета = Модуль_СервисныеФункции.ОбработкаJSON(Текст);
	// Была ошибка, запуска сессии
	Если НРег(РезультатОтвета.error)="true" Тогда
		//ВызватьИсключение РезультатОтвета.message;
		ТекстОшибки = РезультатОтвета.message;
		Возврат ТекстОшибки;
	КонецЕсли;
	
	// II) устанавливаем свойства барузера
	Если ЗначениеЗаполнено(ПутьИсполняемыйФайлБраузера) Тогда
		СтрокаКоманды = "&Operation=browser_set_option&answer_format=json";
		СтрокаКоманды = СтрокаКоманды + "&session_id="+ИмяСессии;
		СтрокаКоманды = СтрокаКоманды + "&api=Selenium";
		СтрокаКоманды = СтрокаКоманды + "&browser="+Браузер;
		СтрокаКоманды = СтрокаКоманды + "&key=BinaryLocation";
		СтрокаКоманды = СтрокаКоманды + "&value="+Модуль_СервисныеФункции.EncodeURL(ПутьИсполняемыйФайлБраузера);
		
		СтруктураОтвета = Модуль_СервисныеФункции.ЗагрузитьФайлПоИнтернетАдресу(ПутьUrl+"/rest.html?"+СтрокаКоманды);
		// 2. Если не запущен попробуем запустить, и проверим еще раз
		Если НЕ СтруктураОтвета.КодСостояния=200 Тогда
			//ВызватьИсключение "Не запущена служба или произошла другая ошибка. Код ответа:"+СтруктураОтвета.КодСостояния;
			ТекстОшибки =  "Не запущена служба или произошла другая ошибка. Код ответа:"+СтруктураОтвета.КодСостояния;
			Возврат ТекстОшибки;
		КонецЕсли;
		
	КонецЕсли;
	

	
	// III) запускаем браузер
	
	СтрокаКоманды = "&Operation=browser_run&answer_format=json";
	СтрокаКоманды = СтрокаКоманды + "&session_id="+ИмяСессии;
	СтрокаКоманды = СтрокаКоманды + "&api=Selenium";
	СтрокаКоманды = СтрокаКоманды + "&browser="+Браузер;
	 

	// 1. Определеим запущен ли веб сервер
	СтруктураОтвета = Модуль_СервисныеФункции.ЗагрузитьФайлПоИнтернетАдресу(ПутьUrl+"/rest.html?"+СтрокаКоманды);
	// 2. Если не запущен попробуем запустить, и проверим еще раз
	Если НЕ СтруктураОтвета.КодСостояния=200 Тогда
		//ВызватьИсключение "Не запущена служба или произошла другая ошибка. Код ответа:"+СтруктураОтвета.КодСостояния;
		ТекстОшибки = "Не запущена служба или произошла другая ошибка. Код ответа:"+СтруктураОтвета.КодСостояния;
		Возврат ТекстОшибки;
	КонецЕсли;

	Возврат ТекстОшибки;
КонецФункции

&НаКлиенте
Функция ЗакрытьБраузер_Selenium_API(Знач АдресИнтернет="http://localhost",Знач НомерПорта=8080,Знач ИмяСессии="Selenium") Экспорт
	
	ТекстОшибки = "";
	ЗагрузитьБиблиотеки();
	СтруктураОтвета = Неопределено;
	
	ПутьUrl = Модуль_СервисныеФункции.ПолучитьПутьUrl(АдресИнтернет, НомерПорта );
	
	// I) закрываем браузер
	
	СтрокаКоманды = "&Operation=browser_stop&answer_format=json";
	СтрокаКоманды = СтрокаКоманды + "&session_id="+ИмяСессии;	
	СтрокаКоманды = СтрокаКоманды + "&api=Selenium";
	 

	// 1. Определеим запущен ли веб сервер
	СтруктураОтвета = Модуль_СервисныеФункции.ЗагрузитьФайлПоИнтернетАдресу(ПутьUrl+"/rest.html?"+СтрокаКоманды);
	// 2. Если не запущен попробуем запустить, и проверим еще раз
	Если НЕ СтруктураОтвета.КодСостояния=200 Тогда
		//ВызватьИсключение "Не запущена служба или произошла другая ошибка. Код ответа:"+СтруктураОтвета.КодСостояния;
		ТекстОшибки = "Не запущена служба или произошла другая ошибка. Код ответа:"+СтруктураОтвета.КодСостояния;
		Возврат ТекстОшибки;
	КонецЕсли;
	
	// II) Закрываем сессию 
	СтрокаКоманды = "&Operation=delete_session&answer_format=json";
	СтрокаКоманды = СтрокаКоманды + "&session_id="+ИмяСессии;
	СтрокаКоманды = СтрокаКоманды + "&api=Selenium";
	
	// 1. Определеим запущен ли веб сервер
	СтруктураОтвета = Модуль_СервисныеФункции.ЗагрузитьФайлПоИнтернетАдресу(ПутьUrl+"/rest.html?"+СтрокаКоманды);
	// 2. Если не запущен попробуем запустить, и проверим еще раз
	Если НЕ СтруктураОтвета.КодСостояния=200 Тогда
		//ВызватьИсключение "Не запущена служба или произошла другая ошибка. Код ответа:"+СтруктураОтвета.КодСостояния;
		ТекстОшибки = "Не запущена служба или произошла другая ошибка. Код ответа:"+СтруктураОтвета.КодСостояния;
		Возврат ТекстОшибки;
	КонецЕсли;
		
	Возврат ТекстОшибки;
КонецФункции

#КонецОбласти

&НаКлиенте
Функция СделатьscreenShot(Знач PID=0, Знач session_id, Знач API,  Знач FileName, Знач АдресИнтернет="http://localhost",Знач НомерПорта=8080 ) Экспорт
	
	ЗагрузитьБиблиотеки();
	СтруктураОтвета = Неопределено;
	МассивИменФайлов = новый Массив;
	
	ПутьUrl = Модуль_СервисныеФункции.ПолучитьПутьUrl(АдресИнтернет, НомерПорта );
	
	// I) закрываем браузер
	
	СтрокаКоманды = "&Operation=make_screenshot&answer_format=json";
	СтрокаКоманды = СтрокаКоманды + "&process_id="+Формат(PID,"ЧГ=;");
	СтрокаКоманды = СтрокаКоманды + "&session_id="+session_id;
	СтрокаКоманды = СтрокаКоманды + "&api="+API;
	СтрокаКоманды = СтрокаКоманды + "&FileName="+Модуль_СервисныеФункции.EncodeURL(FileName);
	 

	// 1. Определеим запущен ли веб сервер
	СтруктураОтвета = Модуль_СервисныеФункции.ЗагрузитьФайлПоИнтернетАдресу(ПутьUrl+"/rest.html?"+СтрокаКоманды);
	// 2. Если не запущен попробуем запустить, и проверим еще раз
	Если НЕ СтруктураОтвета.КодСостояния=200 Тогда
		Сообщить("Не запущена служба или произошла другая ошибка. Код ответа:"+СтруктураОтвета.КодСостояния);
		Возврат МассивИменФайлов;
	КонецЕсли;
	
	// разбираем ответ
	Текст = СтруктураОтвета.ТелоСтрокой;
	
	Попытка
		РезультатОтвета = Модуль_СервисныеФункции.ОбработкаJSON(Текст);
		// Была ошибка, запуска сессии
		МассивИменФайлов = СтрРазделить(РезультатОтвета.ScreenShotFiles,Символы.ПС,Ложь);
		
		// сообщим в журнал, что есть проблемы при создании снимка
		Если НРег(РезультатОтвета.error)="true" Тогда
			Модуль_СервисныеФункции.СообщитьОбОшибке("Модуль_ЗаписьЖурн.СделатьscreenShotПоPIDI",РезультатОтвета.message);	
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	Возврат МассивИменФайлов;
КонецФункции

&НаКлиенте
Функция СделатьscreenShotПоPIDI(Знач PID=0, Знач FileName, Знач АдресИнтернет="http://localhost",Знач НомерПорта=8080 ) Экспорт
	
	ЗагрузитьБиблиотеки();
	СтруктураОтвета = Неопределено;
	МассивИменФайлов = новый Массив;
	
	ПутьUrl = Модуль_СервисныеФункции.ПолучитьПутьUrl(АдресИнтернет, НомерПорта );
	
	// I) закрываем браузер
	
	СтрокаКоманды = "&Operation=make_screenshot&answer_format=json";
	СтрокаКоманды = СтрокаКоманды + "&process_id="+Формат(PID,"ЧГ=;");
	СтрокаКоманды = СтрокаКоманды + "&FileName="+Модуль_СервисныеФункции.EncodeURL(FileName);
	 

	// 1. Определеим запущен ли веб сервер
	СтруктураОтвета = Модуль_СервисныеФункции.ЗагрузитьФайлПоИнтернетАдресу(ПутьUrl+"/rest.html?"+СтрокаКоманды);
	// 2. Если не запущен попробуем запустить, и проверим еще раз
	Если НЕ СтруктураОтвета.КодСостояния=200 Тогда
		Сообщить("Не запущена служба или произошла другая ошибка. Код ответа:"+СтруктураОтвета.КодСостояния);
		Возврат МассивИменФайлов;
	КонецЕсли;
	
	// разбираем ответ
	Текст = СтруктураОтвета.ТелоСтрокой;
	
	Попытка
		РезультатОтвета = Модуль_СервисныеФункции.ОбработкаJSON(Текст);
		// Была ошибка, запуска сессии
		МассивИменФайлов = СтрРазделить(РезультатОтвета.ScreenShotFiles,Символы.ПС,Ложь);
		
		// сообщим в журнал, что есть проблемы при создании снимка
		Если НРег(РезультатОтвета.error)="true" Тогда
			Модуль_СервисныеФункции.СообщитьОбОшибке("Модуль_ЗаписьЖурн.СделатьscreenShotПоPIDI",РезультатОтвета.message);	
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	Возврат МассивИменФайлов;
КонецФункции

&НаКлиенте
Процедура ЗагрузитьБиблиотеки()
	
	Если Модуль_СервисныеФункции=Неопределено Тогда
		Модуль_СервисныеФункции = ПолучитьФорму("ВнешняяОбработка.МенеджерСценарногоТеста.Форма.Модуль_СервисныеФункции");
	КонецЕсли;		
	
КонецПроцедуры	
